# Great guide: https://www.josean.com/posts/how-to-setup-aerospace-tiling-window-manager

# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# SECTION: sketchybar & jankyborders
#
# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  # start and configure jankyborders
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
]

exec-on-workspace-change = []

# END_SECTION: sketchybar & jankyborders

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 15

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# NOTE: mouse-follows-focus
# I don't like MFF
# on-focus-changed = "move-mouse window-lazy-center"

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 7
inner.vertical = 7
outer.left = 7
outer.bottom = 7
outer.top = 7
outer.right = 7

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# Disable CMD-h and CMD-alt-h to hide windows
# FIXME: taken directly from aerospace docs, but it doesn't work
# perhaps this has to do with the cmd-hjkl bindings in karabiner
cmd-h = []
cmd-alt-h = []

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# FIXME: This doesn't work; perhaps try 'aerospace focus --window-id com.github.wz.wezterm'
# TODO: decide between cmd+alt+t and alt-shift-backtick
# alt-shift-backtick = '''exec-and-forget osascript -e '
# tell application "WezTerm"
#     activate
# end tell'
# '''
# FIXME: also doesn't work, but the command works and the finder shortcut below works
cmd-alt-t = 'exec-and-forget wezterm start'
# open finder in ~/.config
cmd-alt-f = 'exec-and-forget open ~/.config'

alt-backtick = 'focus-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion vertical horizontal'

# fullscreen
alt-shift-f = 'fullscreen'
alt-shift-t = 'layout floating tiling'

# flatten
ctrl-alt-shift-esc = 'flatten-workspace-tree'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

ctrl-alt-h = 'join-with left'
ctrl-alt-j = 'join-with down'
ctrl-alt-k = 'join-with up'
ctrl-alt-l = 'join-with right'
# TODO: decide on one of these join bindings
ctrl-alt-shift-h = 'join-with left'
ctrl-alt-shift-j = 'join-with down'
ctrl-alt-shift-k = 'join-with up'
ctrl-alt-shift-l = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# NOTE: Move to workspace: alt <key>

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-6 = 'workspace 1'
alt-7 = 'workspace 2'
alt-8 = 'workspace 3'
alt-9 = 'workspace 4'
alt-0 = 'workspace 5'
# browser workspace
alt-b = 'workspace B'
# chat workspace
alt-c = 'workspace C'
# westerm workspace
alt-w = 'workspace W'
# music workspace
alt-m = 'workspace M'
# notes workspace
alt-n = 'workspace N'
# notes workspace
alt-p = 'workspace P'


# NOTE: Move node/container to workspace: alt-shift <key>

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-6 = ['move-node-to-workspace 1', 'workspace 1']
alt-shift-7 = ['move-node-to-workspace 2', 'workspace 2']
alt-shift-8 = ['move-node-to-workspace 3', 'workspace 3']
alt-shift-9 = ['move-node-to-workspace 4', 'workspace 4']
alt-shift-0 = ['move-node-to-workspace 5', 'workspace 5']
# browser workspace
alt-shift-b = ['move-node-to-workspace B', 'workspace B']
# browser workspace
alt-shift-c = ['move-node-to-workspace C', 'workspace C']
# wezterm workspace
alt-shift-w = ['move-node-to-workspace W', 'workspace W']
# music workspace
alt-shift-m = ['move-node-to-workspace M', 'workspace M']
# notes workspace
alt-shift-n = ['move-node-to-workspace N', 'workspace N']
# social/personal workspace
alt-shift-p = ['move-node-to-workspace P', 'workspace P']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# NOTE: i'm not using this but might be useful to know about
# https://nikitabobko.github.io/AeroSpace/guide.html#assign-workspaces-to-monitors
#[workspace-to-monitor-force-assignment]
# 1 = 1                            # Monitor sequence number from left to right. 1-based indexing
# 2 = 'main'                       # Main monitor
# 3 = 'secondary'                  # Non-main monitor in case when there are only two monitors
# 4 = 'built-in'                   # Case insensitive regex substring
# 5 = '^built-in retina display$'  # Case insensitive regex match
# 6 = ['secondary', 'dell']        # You can specify multiple patterns. The first matching pattern will be used

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
b = 'balance-sizes'
alt-shift-backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']


# SECTION: [[on-window-detected]] callbacks - events that trigger on new window detected

# NOTE: to find app-ids, run `aerospace list-apps`

# to prevent automatically moving new windows on certain workspaces, 
# don't evaluate callback rules when working on numbered workspaces for numbered workspaces > 1 
# (because 1 is the default workspace)

# float finder
[[on-window-detected]]
if.app-name-regex-substring = 'finder'
run = 'layout floating'

# float finder
[[on-window-detected]]
if.app-name-regex-substring = 'stretchly'
run = 'layout floating'

# FIXME: 1 is the default workspace on startup so tiling is a little awkward on startup (i think)
[[on-window-detected]]
if.workspace = '2'
run = "move-node-to-workspace 2"
check-further-callbacks = false
[[on-window-detected]]
if.workspace = '3'
run = "move-node-to-workspace 3"
check-further-callbacks = false
[[on-window-detected]]
if.workspace = '4'
run = "move-node-to-workspace 4" # NOTE: only command supports = laybout floating, layout tiling, move-node-to-workspace
check-further-callbacks = false
[[on-window-detected]]
if.workspace = '5'
run = "move-node-to-workspace 5"
check-further-callbacks = false

# Music
[[on-window-detected]]
if.app-id = 'com.tidal.desktop'
# Automatically move new Tidal windows to M
run = "move-node-to-workspace M"
[[on-window-detected]]
# TY music has no native app so use app name
if.app-name-regex-substring = 'Youtube Music'
run = "move-node-to-workspace M"

# Browser
# [[on-window-detected]]
# if.app-id = 'com.microsoft.edgemac'
# run = "move-node-to-workspace B"
# [[on-window-detected]]
# if.app-id = 'com.brave.Browser'
# run = "move-node-to-workspace B"

# Code (WezTerm)
[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace W"
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace W"
[[on-window-detected]]
if.app-id = 'com.neovide.neovide'
run = "move-node-to-workspace W"
# Keep qutebrowser here for maintaining flow-state
[[on-window-detected]]
if.app-id = 'org.qutebrowser.qutebrowser'
run = "move-node-to-workspace W"

# Chat
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace C"
[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = "move-node-to-workspace C"
[[on-window-detected]]
if.app-id = 'com.microsoft.Outlook'
run = "move-node-to-workspace C"
# NOTE: this one is kind of annoying to move let's not 
# [[on-window-detected]]
# if.app-id = 'com.obsbot.OBSBOT_Center'
# run = "move-node-to-workspace C"

# Personal/Social
[[on-window-detected]]
if.app-id = 'com.facebook.archon.developerID'
run = "move-node-to-workspace P"

# NOTE: Annoying rules for floating or dialog popups? see https://nikitabobko.github.io/AeroSpace/guide#caveats

# END_SECTION: [[on-window-detected ]] callbacks

# SECTION: [[on-workspace-change]] callbacks - events that trigger when the workspace changes

# # Notify Sketchybar about workspace change
# exec-on-workspace-change = [
#   '/bin/bash',
#   '-c',
#   'sketchybar --trigger aerospace_workspace_change FOCUSED=$AEROSPACE_FOCUSED_WORKSPACE',
# ]

# END_SECTION: [[on-window-detected ]] callbacks
